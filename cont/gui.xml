<?xml version="1.0" encoding="koi8-r"?>
<!DOCTYPE webpage [
<!ENTITY % last_mod SYSTEM "../build/last_mod.ent">
<!ENTITY soft       SYSTEM "soft.xml" NDATA XML>
<!ENTITY src-xw     SYSTEM "src_xw.xml" NDATA XML>
%last_mod;
]>
<webpage id="gui">
<config param="desc" value="GUI Builders"/>
<config param="rcsdate" value="&last_mod_gui;"/>
<head>
<title>Построители GUI</title>
<titleabbrev>Построители GUI</titleabbrev>
</head>

 <para>
Существуют различные средства, предназначенные для построения графических
интерфейсов пользователя (GUI). Среди них некоторые используют язык Ада.
Вот список некоторых коммерческих построителей GUI для Motif и 
замеченные недостатки (предоставил Вадим Годунко).
 </para>

 <itemizedlist mark='opencircle'>
   <listitem><para>
     <ulink url="http://www.ics.com/products/motif/bxada/"
            >BX Pro от ICS</ulink>.
     BX Pro - совершенно не обеспечивает возможность проведения локализации
     разрабатываемого интерфейса. Предложенное решение поразило своей
     новизной: когда интерфейс нарисован и сгенерирован файл ресурсов
     необходимо загрузить этот самый файл ресурсов и отредактировать там все
     текстовые надписи.
   </para></listitem>
   <listitem><para>
     <ulink url="http://www.ist.co.uk/xd/">X/Designer от IST</ulink>
     фактически генерирует код на C и связку с этим кодом на Ada.
   </para></listitem>
   <listitem><para>
     <ulink url="http://www.aonix.com/teleuse.html">TeleUSE от Aonix</ulink>
     - самый навороченный (имеет даже собственный язык написания
     callback-ов), но при генерации кода тянет за собой огромную "стандартную
     библиотеку".
   </para></listitem>
 </itemizedlist>

 <para>
   Среди аналогичных средств из "мира Open Source" можно назвать 
   <ulink url="http://glade.gnome.org/">программу Glade</ulink>,
   которая позволяет создавать GUI на базе 
   <olink targetdocent="soft" localinfo="gtkada"
         >связки GtkAda</olink> для переносимого набора тулкита
   <ulink url="http://www.gtk.org/">GTK+</ulink>.
 </para>

 <para>
   Следует отметить, однако, что язык Ада имеет уникальную возможность
   строгой типизации и богатый механизм пользовательских типов.
   В следствии чего и построение GUI имеет смысл вести несколько по другому,
   чем это принято в других языках. Программисту удобнее предоставлять 
   данные для отображения используя собственные типы данных.
   При этом сами типы зачастую довольно точно
   характеризуют данные, обрабатываеммые приложением.
   Интерфейс может использовать информацию заключенную
   в типах чтобы для контроля диапазона и точности
   вводимых пользователем значений.
 </para>

 <para>
   В виду сильной зависимости реализации интерфейса
   от целевой платформы, довольно трудно обеспечить
   единый универсальный набор компонент,
   скрывающий платформенные
   особенности от программы пользователя и, в то же время,
   использующий все возможности, предоставляемые целевой платформой.
   В системах с универсальным набором компонент
   внешний вид программы на разных платформах
   может сильно отличаться от принятого на этих платформах.
 </para>
 
 <para>
   Удобно было бы четко разделить GUI интерфейс и приклодную программу,
   формалино описав методы их взаимодействия.
 </para>

 <para>
   Зачастую программе не нужно
   знать всех тонкостей реализации интерфейса, а
   достаточно предоставить данные для отображения
   и среагировать на реакцию пользователя.
   Строго оговорив взаимодействие программы и
   интерфейса, в дальнейшем, каждая составляющая
   может развиваться независимо от другой.
   Например, интерфейс может быть усовершенствован
   или портирован на другую платформу без
   изменения текста логики программы.
 </para>

 <para>
   Четкая спецификация интерфейса программы может
   быть использована для автоматизации тестирования
   логики и реализации интерфейса.
 </para>

 <para>
   Можно рассмотреть следующий механизм для реализации этого подхода.
 </para>

 <para>
   Интерфейс программы удобно рассматривать ввиде
   набора компонент интерфейса. Компоненты
   могут содержаться друг в друге, и, таким образом,
   объединяются в иерархии (дочерние компоненты
   содержатся в родительских). Компоненты имеют
   свойства меняющиеся в процессе выполнения
   программы. Интерфейс может представлять
   собой статический набор компонент, либо
   компоненты могут создаваться и уничтожаться
   со временем.
 </para>
   
 <para>
   Спецификация интерфейса может быть
   выражена в виде спецификации пакета на
   языке Ада. Для каждого компоненты верхнего уровня (не имеющего
   родителей) создается отдельных пакетах.
 </para>

 <para>
   Если в процессе работы предпологается существование
   нескольких екземпляров данного компонета, то
   в пакете определяется тип - ссылка на компонент.
   С помощью значений данного типа программа может
   менипулировать конкретным экземпляром.
   Работа с компонентом (cоздание и удаление компонента, 
   изменение его атрибутов) осуществляется
   при помощи примитивных операций данного типа.
   Если предпологается существование единственного
   екземпляра, тип не применяется и работа
   с компонентом ведется при помощи обычных подпрограм
   описанных в пакете.
 </para>

 <para>
   Чтобы предоставить интерфейсу методы оповещения
   о реакции пользователя программа предоставляет
   свои процедуры используя формальные параметры
   настраиваемого пакета.
 </para>

 <para>
   Спецификация интерфейса дает большой простор
   для его реализации. Описание реализации интерфейса
   под конкретную платформу хранится в отдельном файле
   в своем формате. При таком подходе
   процесс построения приложения может проходить так:
 </para>

 <itemizedlist mark='opencircle'>
   <listitem><para>
     Построение описания интерфейса в виде спецификации
пакета с использованием типов данных прикладной задачи
   </para></listitem>
   <listitem><para>
     Построение реализации интерфеса для одной из
     поддерживаемых платформ с использование построителя GUI.
   </para></listitem>
   <listitem><para>
     Генерация исполняемого кода по файлу реализации интерфейса
   </para></listitem>
   <listitem><para>
     Сборка прикладной части программы с кодлм интерфейса
   </para></listitem>
 </itemizedlist>

 <para>
   Идеи построения GUI подобным методом обсуждались в нашей конференции
   и возможно будут реализованы в 
   <olink targetdocent="src-xw">проекте Вадима Годунко xmada</olink>.
 </para>

</webpage>
