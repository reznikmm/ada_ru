--  Auto generated file. Don't edit

package body Encodings.Maps.ISO_8859_5 is

   Forward  : Forward_Map  (Character'Val(16#A1#) .. Character'Last) :=
     (Wide_Character'Val( 16#401#),
      Wide_Character'Val( 16#402#),
      Wide_Character'Val( 16#403#),
      Wide_Character'Val( 16#404#),
      Wide_Character'Val( 16#405#),
      Wide_Character'Val( 16#406#),
      Wide_Character'Val( 16#407#),
      Wide_Character'Val( 16#408#),
      Wide_Character'Val( 16#409#),
      Wide_Character'Val( 16#40A#),
      Wide_Character'Val( 16#40B#),
      Wide_Character'Val( 16#40C#),
      Wide_Character'Val(  16#AD#),
      Wide_Character'Val( 16#40E#),
      Wide_Character'Val( 16#40F#),
      Wide_Character'Val( 16#410#),
      Wide_Character'Val( 16#411#),
      Wide_Character'Val( 16#412#),
      Wide_Character'Val( 16#413#),
      Wide_Character'Val( 16#414#),
      Wide_Character'Val( 16#415#),
      Wide_Character'Val( 16#416#),
      Wide_Character'Val( 16#417#),
      Wide_Character'Val( 16#418#),
      Wide_Character'Val( 16#419#),
      Wide_Character'Val( 16#41A#),
      Wide_Character'Val( 16#41B#),
      Wide_Character'Val( 16#41C#),
      Wide_Character'Val( 16#41D#),
      Wide_Character'Val( 16#41E#),
      Wide_Character'Val( 16#41F#),
      Wide_Character'Val( 16#420#),
      Wide_Character'Val( 16#421#),
      Wide_Character'Val( 16#422#),
      Wide_Character'Val( 16#423#),
      Wide_Character'Val( 16#424#),
      Wide_Character'Val( 16#425#),
      Wide_Character'Val( 16#426#),
      Wide_Character'Val( 16#427#),
      Wide_Character'Val( 16#428#),
      Wide_Character'Val( 16#429#),
      Wide_Character'Val( 16#42A#),
      Wide_Character'Val( 16#42B#),
      Wide_Character'Val( 16#42C#),
      Wide_Character'Val( 16#42D#),
      Wide_Character'Val( 16#42E#),
      Wide_Character'Val( 16#42F#),
      Wide_Character'Val( 16#430#),
      Wide_Character'Val( 16#431#),
      Wide_Character'Val( 16#432#),
      Wide_Character'Val( 16#433#),
      Wide_Character'Val( 16#434#),
      Wide_Character'Val( 16#435#),
      Wide_Character'Val( 16#436#),
      Wide_Character'Val( 16#437#),
      Wide_Character'Val( 16#438#),
      Wide_Character'Val( 16#439#),
      Wide_Character'Val( 16#43A#),
      Wide_Character'Val( 16#43B#),
      Wide_Character'Val( 16#43C#),
      Wide_Character'Val( 16#43D#),
      Wide_Character'Val( 16#43E#),
      Wide_Character'Val( 16#43F#),
      Wide_Character'Val( 16#440#),
      Wide_Character'Val( 16#441#),
      Wide_Character'Val( 16#442#),
      Wide_Character'Val( 16#443#),
      Wide_Character'Val( 16#444#),
      Wide_Character'Val( 16#445#),
      Wide_Character'Val( 16#446#),
      Wide_Character'Val( 16#447#),
      Wide_Character'Val( 16#448#),
      Wide_Character'Val( 16#449#),
      Wide_Character'Val( 16#44A#),
      Wide_Character'Val( 16#44B#),
      Wide_Character'Val( 16#44C#),
      Wide_Character'Val( 16#44D#),
      Wide_Character'Val( 16#44E#),
      Wide_Character'Val( 16#44F#),
      Wide_Character'Val(16#2116#),
      Wide_Character'Val( 16#451#),
      Wide_Character'Val( 16#452#),
      Wide_Character'Val( 16#453#),
      Wide_Character'Val( 16#454#),
      Wide_Character'Val( 16#455#),
      Wide_Character'Val( 16#456#),
      Wide_Character'Val( 16#457#),
      Wide_Character'Val( 16#458#),
      Wide_Character'Val( 16#459#),
      Wide_Character'Val( 16#45A#),
      Wide_Character'Val( 16#45B#),
      Wide_Character'Val( 16#45C#),
      Wide_Character'Val(  16#A7#),
      Wide_Character'Val( 16#45E#),
      Wide_Character'Val( 16#45F#));

   Ranges   : Maps.Wide_Ranges  (1 ..  8) :=
     ((Wide_Character'Val(   16#0#),Wide_Character'Val(  16#A0#), 1),
      (Wide_Character'Val(  16#A7#),Wide_Character'Val(  16#A7#), 162),
      (Wide_Character'Val(  16#AD#),Wide_Character'Val(  16#AD#), 163),
      (Wide_Character'Val( 16#401#),Wide_Character'Val( 16#40C#), 164),
      (Wide_Character'Val( 16#40E#),Wide_Character'Val( 16#44F#), 176),
      (Wide_Character'Val( 16#451#),Wide_Character'Val( 16#45C#), 242),
      (Wide_Character'Val( 16#45E#),Wide_Character'Val( 16#45F#), 254),
      (Wide_Character'Val(16#2116#),Wide_Character'Val(16#2116#), 256));

   Backward : Maps.Backward_Map (1 ..  256) :=
     (Character'Val( 16#0#),
      Character'Val( 16#1#),
      Character'Val( 16#2#),
      Character'Val( 16#3#),
      Character'Val( 16#4#),
      Character'Val( 16#5#),
      Character'Val( 16#6#),
      Character'Val( 16#7#),
      Character'Val( 16#8#),
      Character'Val( 16#9#),
      Character'Val( 16#A#),
      Character'Val( 16#B#),
      Character'Val( 16#C#),
      Character'Val( 16#D#),
      Character'Val( 16#E#),
      Character'Val( 16#F#),
      Character'Val(16#10#),
      Character'Val(16#11#),
      Character'Val(16#12#),
      Character'Val(16#13#),
      Character'Val(16#14#),
      Character'Val(16#15#),
      Character'Val(16#16#),
      Character'Val(16#17#),
      Character'Val(16#18#),
      Character'Val(16#19#),
      Character'Val(16#1A#),
      Character'Val(16#1B#),
      Character'Val(16#1C#),
      Character'Val(16#1D#),
      Character'Val(16#1E#),
      Character'Val(16#1F#),
      Character'Val(16#20#),
      Character'Val(16#21#),
      Character'Val(16#22#),
      Character'Val(16#23#),
      Character'Val(16#24#),
      Character'Val(16#25#),
      Character'Val(16#26#),
      Character'Val(16#27#),
      Character'Val(16#28#),
      Character'Val(16#29#),
      Character'Val(16#2A#),
      Character'Val(16#2B#),
      Character'Val(16#2C#),
      Character'Val(16#2D#),
      Character'Val(16#2E#),
      Character'Val(16#2F#),
      Character'Val(16#30#),
      Character'Val(16#31#),
      Character'Val(16#32#),
      Character'Val(16#33#),
      Character'Val(16#34#),
      Character'Val(16#35#),
      Character'Val(16#36#),
      Character'Val(16#37#),
      Character'Val(16#38#),
      Character'Val(16#39#),
      Character'Val(16#3A#),
      Character'Val(16#3B#),
      Character'Val(16#3C#),
      Character'Val(16#3D#),
      Character'Val(16#3E#),
      Character'Val(16#3F#),
      Character'Val(16#40#),
      Character'Val(16#41#),
      Character'Val(16#42#),
      Character'Val(16#43#),
      Character'Val(16#44#),
      Character'Val(16#45#),
      Character'Val(16#46#),
      Character'Val(16#47#),
      Character'Val(16#48#),
      Character'Val(16#49#),
      Character'Val(16#4A#),
      Character'Val(16#4B#),
      Character'Val(16#4C#),
      Character'Val(16#4D#),
      Character'Val(16#4E#),
      Character'Val(16#4F#),
      Character'Val(16#50#),
      Character'Val(16#51#),
      Character'Val(16#52#),
      Character'Val(16#53#),
      Character'Val(16#54#),
      Character'Val(16#55#),
      Character'Val(16#56#),
      Character'Val(16#57#),
      Character'Val(16#58#),
      Character'Val(16#59#),
      Character'Val(16#5A#),
      Character'Val(16#5B#),
      Character'Val(16#5C#),
      Character'Val(16#5D#),
      Character'Val(16#5E#),
      Character'Val(16#5F#),
      Character'Val(16#60#),
      Character'Val(16#61#),
      Character'Val(16#62#),
      Character'Val(16#63#),
      Character'Val(16#64#),
      Character'Val(16#65#),
      Character'Val(16#66#),
      Character'Val(16#67#),
      Character'Val(16#68#),
      Character'Val(16#69#),
      Character'Val(16#6A#),
      Character'Val(16#6B#),
      Character'Val(16#6C#),
      Character'Val(16#6D#),
      Character'Val(16#6E#),
      Character'Val(16#6F#),
      Character'Val(16#70#),
      Character'Val(16#71#),
      Character'Val(16#72#),
      Character'Val(16#73#),
      Character'Val(16#74#),
      Character'Val(16#75#),
      Character'Val(16#76#),
      Character'Val(16#77#),
      Character'Val(16#78#),
      Character'Val(16#79#),
      Character'Val(16#7A#),
      Character'Val(16#7B#),
      Character'Val(16#7C#),
      Character'Val(16#7D#),
      Character'Val(16#7E#),
      Character'Val(16#7F#),
      Character'Val(16#80#),
      Character'Val(16#81#),
      Character'Val(16#82#),
      Character'Val(16#83#),
      Character'Val(16#84#),
      Character'Val(16#85#),
      Character'Val(16#86#),
      Character'Val(16#87#),
      Character'Val(16#88#),
      Character'Val(16#89#),
      Character'Val(16#8A#),
      Character'Val(16#8B#),
      Character'Val(16#8C#),
      Character'Val(16#8D#),
      Character'Val(16#8E#),
      Character'Val(16#8F#),
      Character'Val(16#90#),
      Character'Val(16#91#),
      Character'Val(16#92#),
      Character'Val(16#93#),
      Character'Val(16#94#),
      Character'Val(16#95#),
      Character'Val(16#96#),
      Character'Val(16#97#),
      Character'Val(16#98#),
      Character'Val(16#99#),
      Character'Val(16#9A#),
      Character'Val(16#9B#),
      Character'Val(16#9C#),
      Character'Val(16#9D#),
      Character'Val(16#9E#),
      Character'Val(16#9F#),
      Character'Val(16#A0#),
      Character'Val(16#FD#),
      Character'Val(16#AD#),
      Character'Val(16#A1#),
      Character'Val(16#A2#),
      Character'Val(16#A3#),
      Character'Val(16#A4#),
      Character'Val(16#A5#),
      Character'Val(16#A6#),
      Character'Val(16#A7#),
      Character'Val(16#A8#),
      Character'Val(16#A9#),
      Character'Val(16#AA#),
      Character'Val(16#AB#),
      Character'Val(16#AC#),
      Character'Val(16#AE#),
      Character'Val(16#AF#),
      Character'Val(16#B0#),
      Character'Val(16#B1#),
      Character'Val(16#B2#),
      Character'Val(16#B3#),
      Character'Val(16#B4#),
      Character'Val(16#B5#),
      Character'Val(16#B6#),
      Character'Val(16#B7#),
      Character'Val(16#B8#),
      Character'Val(16#B9#),
      Character'Val(16#BA#),
      Character'Val(16#BB#),
      Character'Val(16#BC#),
      Character'Val(16#BD#),
      Character'Val(16#BE#),
      Character'Val(16#BF#),
      Character'Val(16#C0#),
      Character'Val(16#C1#),
      Character'Val(16#C2#),
      Character'Val(16#C3#),
      Character'Val(16#C4#),
      Character'Val(16#C5#),
      Character'Val(16#C6#),
      Character'Val(16#C7#),
      Character'Val(16#C8#),
      Character'Val(16#C9#),
      Character'Val(16#CA#),
      Character'Val(16#CB#),
      Character'Val(16#CC#),
      Character'Val(16#CD#),
      Character'Val(16#CE#),
      Character'Val(16#CF#),
      Character'Val(16#D0#),
      Character'Val(16#D1#),
      Character'Val(16#D2#),
      Character'Val(16#D3#),
      Character'Val(16#D4#),
      Character'Val(16#D5#),
      Character'Val(16#D6#),
      Character'Val(16#D7#),
      Character'Val(16#D8#),
      Character'Val(16#D9#),
      Character'Val(16#DA#),
      Character'Val(16#DB#),
      Character'Val(16#DC#),
      Character'Val(16#DD#),
      Character'Val(16#DE#),
      Character'Val(16#DF#),
      Character'Val(16#E0#),
      Character'Val(16#E1#),
      Character'Val(16#E2#),
      Character'Val(16#E3#),
      Character'Val(16#E4#),
      Character'Val(16#E5#),
      Character'Val(16#E6#),
      Character'Val(16#E7#),
      Character'Val(16#E8#),
      Character'Val(16#E9#),
      Character'Val(16#EA#),
      Character'Val(16#EB#),
      Character'Val(16#EC#),
      Character'Val(16#ED#),
      Character'Val(16#EE#),
      Character'Val(16#EF#),
      Character'Val(16#F1#),
      Character'Val(16#F2#),
      Character'Val(16#F3#),
      Character'Val(16#F4#),
      Character'Val(16#F5#),
      Character'Val(16#F6#),
      Character'Val(16#F7#),
      Character'Val(16#F8#),
      Character'Val(16#F9#),
      Character'Val(16#FA#),
      Character'Val(16#FB#),
      Character'Val(16#FC#),
      Character'Val(16#FE#),
      Character'Val(16#FF#),
      Character'Val(16#F0#));

   function Decode (Char : Character) return Wide_Character is
   begin
      return Decode (Char, Forward);
   end Decode;

   procedure Decode
     (Text        : in     Raw_String;
      Text_Last   :    out Natural;
      Result      :    out Wide_String;
      Result_Last :    out Natural;
      Map         : in     Encoding := Encodings.ISO_8859_5)
   is
   begin
      Decode (Text, Text_Last, Result, Result_Last, Forward);
   end Decode;

   procedure Encode
     (Text        : in     Wide_String;
      Text_Last   :    out Natural;
      Result      :    out Raw_String;
      Result_Last :    out Natural;
      Map         : in     Encoding := Encodings.ISO_8859_5)
   is
   begin
      Encode (Text, Text_Last, Result, Result_Last,
              Ranges, Backward);
   end Encode;

begin
   Encoder_List (Encodings.ISO_8859_5) := Encode'Access;
   Decoder_List (Encodings.ISO_8859_5) := Decode'Access;
end Encodings.Maps.ISO_8859_5;
